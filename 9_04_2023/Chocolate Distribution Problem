#User function Template for python3

class Solution:

    def findMinDiff(self, A,n,m):

        # code here
        if (m == 0 or n == 0):
            return 0
        A.sort()
    
        if (n < m):
            return -1
     
        min_diff = A[n-1] - A[0]
    
        for i in range(len(A) - m + 1):
            min_diff = min(min_diff,  A[i + m - 1] - A[i])
     
        return min_diff

#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':

    t = int(input())

    for _ in range(t):
        N = int(input())
        A = [int(x) for x in input().split()]
        M = int(input())


        solObj = Solution()

        print(solObj.findMinDiff(A,N,M))
# } Driver Code Ends